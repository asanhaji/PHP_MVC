<?php
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 1. getAllUsers();
// 2. getUserByFilter();
// 3. createUser();
// 4. updateUser();
// 5. deleteUser();
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class UsersModel {

  protected $ladate;
  private $_usersList;

  public function __CONSTRUCT() {
    date_default_timezone_set('UTC');
    $this->ladate = date('Y-m-d');
  }

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // NUMBER 1 => Get All Users
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public function getAllUsers() {
    $user = Database::getInstance()->read("users", "*");
    if($user != NULL) {
      $this->_usersList = [];
      foreach ($user as $key => $value) {
        $newUser = new User($value['id'], $value['username'], $value['password'],
        $value['email'], $value['group'], $value['status'], $value['creation_date'], $value['edition_date']);
        array_push($this->_usersList, $newUser);
      }
      return $this->_usersList;
    }
    return NULL;
  }

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // NUMBER 2 => Get Specific Users (one or more)
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public function getUserByFilter(...$param){
    $i = 0;
    while($i < count($param)) {
      $array[$param[$i]] = $param[$i+1];
      $i += 2;
    }
    $user = Database::getInstance()->read("users", "*", $array);
    if($user != NULL) {
      $this->_usersList = [];
      foreach ($user as $key => $value) {
        $newUser = new User($value['id'], $value['username'], $value['password'],
        $value['email'], $value['group'], $value['status'], $value['creation_date'], $value['edition_date']);
        array_push($this->_usersList, $newUser);
      }
      return $this->_usersList;
    }
    return NULL;
  }

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // NUMBER 3 => Creation of a User
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public function createUser($username, $password, $email, $group, $status){
    $hashedpassword = password_hash($password, PASSWORD_BCRYPT);
    $array = array(
      "username" => $username,
      "password" => $hashedpassword,
      "email" => $email,
      "group" => $group,
      "status" => $status,
      "creation_date" => $this->ladate,
      "edition_date" => $this->ladate,
    );
    $user = Database::getInstance()->create("users", $array);
    return $user;
  }

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // NUMBER 4 => Modification of a User
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public function updateUser($id, ...$param) {
    $i = 0;
    while($i < count($param)) {
      if($param[$i] == "password") {
        $hashedpassword = password_hash($param[$i+1], PASSWORD_BCRYPT);
        $array[$param[$i]] = $hashedpassword;
      }
      else {
        $array[$param[$i]] = $param[$i+1];
      }
      $i += 2;
    }
    $array['edition_date'] = $this->ladate;
    $user = Database::getInstance()->update("users", "id", $id, $array);
    return $user;
  }

  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // NUMBER 5 => Deletion of a User
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  public function deleteUser(...$param) {
    $i = 0;
    while($i < count($param)) {
      $array[$param[$i]] = $param[$i+1];
      $i += 2;
    }
    $user = Database::getInstance()->delete("users", $array);
    return $user;
  }
}
?>
